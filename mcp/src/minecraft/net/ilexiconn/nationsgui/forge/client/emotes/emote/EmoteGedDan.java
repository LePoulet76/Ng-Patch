/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.client.model.ModelBiped
 *  net.minecraft.entity.player.EntityPlayer
 */
package net.ilexiconn.nationsgui.forge.client.emotes.emote;

import aurelienribon.tweenengine.Timeline;
import aurelienribon.tweenengine.Tween;
import aurelienribon.tweenengine.equations.Linear;
import net.ilexiconn.nationsgui.forge.client.emotes.emote.base.EmoteBase;
import net.minecraft.client.model.ModelBiped;
import net.minecraft.entity.player.EntityPlayer;

public class EmoteGedDan
extends EmoteBase {
    public EmoteGedDan(EntityPlayer player, ModelBiped model, ModelBiped armorModel, ModelBiped armorLegsModel) {
        super(player, model, armorModel, armorLegsModel);
    }

    @Override
    public Timeline getTimeline(EntityPlayer player, ModelBiped model) {
        Timeline timeline = ((Timeline)((Timeline)Timeline.createSequence().beginParallel().push(Tween.to(model, 20, 430.0f).target(-2.0f)).push(Tween.to(model, 18, 430.0f).target(-0.5f)).push(Tween.to(model, 1, 250.0f).target(-0.3f)).push(Tween.to(model, 0, 430.0f).target(-0.4f)).end().pushPause(80.0f).beginParallel().push(Tween.to(model, 1, 250.0f).target(0.3f)).push(Tween.to(model, 20, 240.0f).target(0.0f)).push(Tween.to(model, 20, 240.0f).target(0.0f)).push(Tween.to(model, 14, 430.0f).target(2.0f)).push(Tween.to(model, 12, 430.0f).target(-0.5f)).end().pushPause(80.0f).beginSequence().beginParallel().push(Tween.to(model, 0, 8300.0f).target(400.0f).ease(Linear.INOUT)).push(Tween.to(model, 1, 8300.0f).target(4000.0f).ease(Linear.INOUT)).push(Tween.to(model, 1, 8300.0f).target(40000.0f).ease(Linear.INOUT)).push(Tween.to(model, 18, 8300.0f).target(300.0f).ease(Linear.INOUT)).push(Tween.to(model, 19, 8300.0f).target(3000.0f).ease(Linear.INOUT)).push(Tween.to(model, 20, 8300.0f).target(30000.0f).ease(Linear.INOUT)).push(Tween.to(model, 12, 8300.0f).target(500.0f).ease(Linear.INOUT)).push(Tween.to(model, 13, 8300.0f).target(5000.0f).ease(Linear.INOUT)).push(Tween.to(model, 14, 8300.0f).target(50000.0f).ease(Linear.INOUT)).push(Tween.to(model, 6, 8300.0f).target(650.0f).ease(Linear.INOUT)).push(Tween.to(model, 7, 8300.0f).target(6500.0f).ease(Linear.INOUT)).push(Tween.to(model, 8, 8300.0f).target(65000.0f).ease(Linear.INOUT)).push(Tween.to(model, 30, 8300.0f).target(2400.0f).ease(Linear.INOUT)).push(Tween.to(model, 31, 8300.0f).target(24000.0f).ease(Linear.INOUT)).push(Tween.to(model, 32, 8300.0f).target(240000.0f).ease(Linear.INOUT)).push(Tween.to(model, 24, 8300.0f).target(56400.0f).ease(Linear.INOUT)).push(Tween.to(model, 25, 8300.0f).target(564000.0f).ease(Linear.INOUT)).push(Tween.to(model, 26, 8300.0f).target(5640000.0f).ease(Linear.INOUT)).end().beginParallel().push(Tween.to(model, 0, 0.0f).target(0.0f)).push(Tween.to(model, 1, 0.0f).target(0.0f)).push(Tween.to(model, 1, 0.0f).target(0.0f)).push(Tween.to(model, 18, 0.0f).target(0.0f)).push(Tween.to(model, 19, 0.0f).target(0.0f)).push(Tween.to(model, 20, 0.0f).target(0.0f)).push(Tween.to(model, 12, 0.0f).target(0.0f)).push(Tween.to(model, 13, 0.0f).target(0.0f)).push(Tween.to(model, 14, 0.0f).target(0.0f)).push(Tween.to(model, 6, 0.0f).target(0.0f)).push(Tween.to(model, 7, 0.0f).target(0.0f)).push(Tween.to(model, 8, 0.0f).target(0.0f)).push(Tween.to(model, 30, 0.0f).target(0.0f)).push(Tween.to(model, 31, 0.0f).target(0.0f)).push(Tween.to(model, 32, 0.0f).target(0.0f)).push(Tween.to(model, 24, 0.0f).target(0.0f)).push(Tween.to(model, 25, 0.0f).target(0.0f)).push(Tween.to(model, 26, 0.0f).target(0.0f)).end().beginParallel().push(Tween.to(model, 8, 430.0f).target(0.3f)).push(Tween.to(model, 20, 430.0f).target(0.4f)).push(Tween.to(model, 14, 430.0f).target(0.4f)).end().pushPause(80.0f).beginParallel().push(Tween.to(model, 8, 430.0f).target(-0.3f)).push(Tween.to(model, 20, 430.0f).target(-0.4f)).push(Tween.to(model, 14, 430.0f).target(-0.4f)).end().beginParallel().push(Tween.to(model, 0, 900.0f).target(400.0f).ease(Linear.INOUT)).push(Tween.to(model, 1, 900.0f).target(4000.0f).ease(Linear.INOUT)).push(Tween.to(model, 1, 900.0f).target(40000.0f).ease(Linear.INOUT)).push(Tween.to(model, 18, 900.0f).target(300.0f).ease(Linear.INOUT)).push(Tween.to(model, 19, 900.0f).target(3000.0f).ease(Linear.INOUT)).push(Tween.to(model, 20, 900.0f).target(30000.0f).ease(Linear.INOUT)).push(Tween.to(model, 12, 900.0f).target(500.0f).ease(Linear.INOUT)).push(Tween.to(model, 13, 900.0f).target(5000.0f).ease(Linear.INOUT)).push(Tween.to(model, 14, 900.0f).target(50000.0f).ease(Linear.INOUT)).push(Tween.to(model, 6, 900.0f).target(650.0f).ease(Linear.INOUT)).push(Tween.to(model, 7, 900.0f).target(6500.0f).ease(Linear.INOUT)).push(Tween.to(model, 8, 900.0f).target(65000.0f).ease(Linear.INOUT)).push(Tween.to(model, 30, 900.0f).target(2400.0f).ease(Linear.INOUT)).push(Tween.to(model, 31, 900.0f).target(24000.0f).ease(Linear.INOUT)).push(Tween.to(model, 32, 900.0f).target(240000.0f).ease(Linear.INOUT)).push(Tween.to(model, 24, 900.0f).target(56400.0f).ease(Linear.INOUT)).push(Tween.to(model, 25, 900.0f).target(564000.0f).ease(Linear.INOUT)).push(Tween.to(model, 26, 900.0f).target(5640000.0f).ease(Linear.INOUT)).end().beginParallel().push(Tween.to(model, 0, 0.0f).target(0.0f)).push(Tween.to(model, 1, 0.0f).target(0.0f)).push(Tween.to(model, 1, 0.0f).target(0.0f)).push(Tween.to(model, 18, 0.0f).target(0.0f)).push(Tween.to(model, 19, 0.0f).target(0.0f)).push(Tween.to(model, 20, 0.0f).target(0.0f)).push(Tween.to(model, 12, 0.0f).target(0.0f)).push(Tween.to(model, 13, 0.0f).target(0.0f)).push(Tween.to(model, 14, 0.0f).target(0.0f)).push(Tween.to(model, 6, 0.0f).target(0.0f)).push(Tween.to(model, 7, 0.0f).target(0.0f)).push(Tween.to(model, 8, 0.0f).target(0.0f)).push(Tween.to(model, 30, 0.0f).target(0.0f)).push(Tween.to(model, 31, 0.0f).target(0.0f)).push(Tween.to(model, 32, 0.0f).target(0.0f)).push(Tween.to(model, 24, 0.0f).target(0.0f)).push(Tween.to(model, 25, 0.0f).target(0.0f)).push(Tween.to(model, 26, 0.0f).target(0.0f)).end().push(Tween.to(model, 8, 0.0f).target(0.0f)).push(Tween.to(model, 20, 0.0f).target(0.0f)).push(Tween.to(model, 14, 0.0f).target(0.0f)).beginParallel().push(Tween.to(model, 8, 430.0f).target(0.3f)).push(Tween.to(model, 20, 430.0f).target(0.4f)).push(Tween.to(model, 14, 430.0f).target(0.4f)).end().pushPause(80.0f).beginParallel().push(Tween.to(model, 8, 430.0f).target(-0.3f)).push(Tween.to(model, 20, 430.0f).target(-0.4f)).push(Tween.to(model, 14, 430.0f).target(-0.4f)).end().push(Tween.to(model, 8, 0.0f).target(0.0f)).push(Tween.to(model, 20, 0.0f).target(0.0f)).push(Tween.to(model, 14, 0.0f).target(0.0f)).push(Tween.to(model, 6, 112.0f).target(0.0f)).beginSequence().beginParallel().push(Tween.to(model, 6, 105.0f).target(-0.4f)).push(Tween.to(model, 0, 105.0f).target(0.05f)).push(Tween.to(model, 18, 105.0f).target(-0.3f)).push(Tween.to(model, 12, 105.0f).target(-0.3f)).end().beginParallel().push(Tween.to(model, 6, 105.0f).target(0.4f)).push(Tween.to(model, 0, 105.0f).target(-0.05f)).push(Tween.to(model, 18, 105.0f).target(0.3f)).push(Tween.to(model, 12, 105.0f).target(0.3f)).end().repeat(8, 0.0f)).end().pushPause(430.0f).push(Tween.to(model, 6, 0.0f).target(0.0f)).push(Tween.to(model, 0, 0.0f).target(0.0f)).push(Tween.to(model, 18, 0.0f).target(0.0f)).push(Tween.to(model, 12, 0.0f).target(0.0f)).beginParallel().push(Tween.to(model, 20, 430.0f).target(-2.0f)).push(Tween.to(model, 18, 430.0f).target(-0.5f)).push(Tween.to(model, 1, 250.0f).target(-0.3f)).end().pushPause(80.0f).beginParallel().push(Tween.to(model, 1, 250.0f).target(0.3f)).push(Tween.to(model, 20, 240.0f).target(0.0f)).push(Tween.to(model, 18, 240.0f).target(0.0f)).push(Tween.to(model, 14, 430.0f).target(2.0f)).push(Tween.to(model, 12, 430.0f).target(-0.5f)).end().beginParallel().push(Tween.to(model, 1, 120.0f).target(0.0f)).push(Tween.to(model, 0, 240.0f).target(-0.3f)).push(Tween.to(model, 20, 430.0f).target(-2.5f)).push(Tween.to(model, 18, 430.0f).target(-0.5f)).push(Tween.to(model, 14, 430.0f).target(2.5f)).push(Tween.to(model, 12, 430.0f).target(-0.5f)).end().pushPause(90.0f).repeat(1, 0.0f)).end().beginParallel().push(Tween.to(model, 0, 3800.0f).target(400.0f).ease(Linear.INOUT)).push(Tween.to(model, 1, 3800.0f).target(4000.0f).ease(Linear.INOUT)).push(Tween.to(model, 1, 3800.0f).target(40000.0f).ease(Linear.INOUT)).push(Tween.to(model, 18, 3800.0f).target(300.0f).ease(Linear.INOUT)).push(Tween.to(model, 19, 3800.0f).target(3000.0f).ease(Linear.INOUT)).push(Tween.to(model, 20, 3800.0f).target(30000.0f).ease(Linear.INOUT)).push(Tween.to(model, 12, 3800.0f).target(500.0f).ease(Linear.INOUT)).push(Tween.to(model, 13, 3800.0f).target(5000.0f).ease(Linear.INOUT)).push(Tween.to(model, 14, 3800.0f).target(50000.0f).ease(Linear.INOUT)).push(Tween.to(model, 6, 3800.0f).target(650.0f).ease(Linear.INOUT)).push(Tween.to(model, 7, 3800.0f).target(6500.0f).ease(Linear.INOUT)).push(Tween.to(model, 8, 3800.0f).target(65000.0f).ease(Linear.INOUT)).push(Tween.to(model, 30, 3800.0f).target(2400.0f).ease(Linear.INOUT)).push(Tween.to(model, 31, 3800.0f).target(24000.0f).ease(Linear.INOUT)).push(Tween.to(model, 32, 3800.0f).target(240000.0f).ease(Linear.INOUT)).push(Tween.to(model, 24, 3800.0f).target(56400.0f).ease(Linear.INOUT)).push(Tween.to(model, 25, 3800.0f).target(564000.0f).ease(Linear.INOUT)).push(Tween.to(model, 26, 3800.0f).target(5640000.0f).ease(Linear.INOUT)).end().beginParallel().push(Tween.to(model, 0, 0.0f).target(0.0f)).push(Tween.to(model, 1, 0.0f).target(0.0f)).push(Tween.to(model, 1, 0.0f).target(0.0f)).push(Tween.to(model, 18, 0.0f).target(0.0f)).push(Tween.to(model, 19, 0.0f).target(0.0f)).push(Tween.to(model, 20, 0.0f).target(0.0f)).push(Tween.to(model, 12, 0.0f).target(0.0f)).push(Tween.to(model, 13, 0.0f).target(0.0f)).push(Tween.to(model, 14, 0.0f).target(0.0f)).push(Tween.to(model, 6, 0.0f).target(0.0f)).push(Tween.to(model, 7, 0.0f).target(0.0f)).push(Tween.to(model, 8, 0.0f).target(0.0f)).push(Tween.to(model, 30, 0.0f).target(0.0f)).push(Tween.to(model, 31, 0.0f).target(0.0f)).push(Tween.to(model, 32, 0.0f).target(0.0f)).push(Tween.to(model, 24, 0.0f).target(0.0f)).push(Tween.to(model, 25, 0.0f).target(0.0f)).push(Tween.to(model, 26, 0.0f).target(0.0f)).end();
        return timeline;
    }

    @Override
    public boolean usesBodyPart(int part) {
        return part == 0 || part == 12 || part == 18 || part == 6 || part == 30 || part == 24;
    }

    @Override
    protected void startSound() {
    }

    @Override
    protected boolean hasSound() {
        return false;
    }
}

