package net.ilexiconn.nationsgui.forge.client.emotes.emote;

import aurelienribon.tweenengine.Timeline;
import aurelienribon.tweenengine.Tween;
import aurelienribon.tweenengine.equations.Linear;
import net.ilexiconn.nationsgui.forge.client.emotes.emote.base.EmoteBase;
import net.minecraft.client.model.ModelBiped;
import net.minecraft.entity.player.EntityPlayer;

public class EmoteGedDan extends EmoteBase {

   public EmoteGedDan(EntityPlayer player, ModelBiped model, ModelBiped armorModel, ModelBiped armorLegsModel) {
      super(player, model, armorModel, armorLegsModel);
   }

   public Timeline getTimeline(EntityPlayer player, ModelBiped model) {
      Timeline timeline = ((Timeline)((Timeline)Timeline.createSequence().beginParallel().push(Tween.to(model, 20, 430.0F).target(-2.0F)).push(Tween.to(model, 18, 430.0F).target(-0.5F)).push(Tween.to(model, 1, 250.0F).target(-0.3F)).push(Tween.to(model, 0, 430.0F).target(-0.4F)).end().pushPause(80.0F).beginParallel().push(Tween.to(model, 1, 250.0F).target(0.3F)).push(Tween.to(model, 20, 240.0F).target(0.0F)).push(Tween.to(model, 20, 240.0F).target(0.0F)).push(Tween.to(model, 14, 430.0F).target(2.0F)).push(Tween.to(model, 12, 430.0F).target(-0.5F)).end().pushPause(80.0F).beginSequence().beginParallel().push(Tween.to(model, 0, 8300.0F).target(400.0F).ease(Linear.INOUT)).push(Tween.to(model, 1, 8300.0F).target(4000.0F).ease(Linear.INOUT)).push(Tween.to(model, 1, 8300.0F).target(40000.0F).ease(Linear.INOUT)).push(Tween.to(model, 18, 8300.0F).target(300.0F).ease(Linear.INOUT)).push(Tween.to(model, 19, 8300.0F).target(3000.0F).ease(Linear.INOUT)).push(Tween.to(model, 20, 8300.0F).target(30000.0F).ease(Linear.INOUT)).push(Tween.to(model, 12, 8300.0F).target(500.0F).ease(Linear.INOUT)).push(Tween.to(model, 13, 8300.0F).target(5000.0F).ease(Linear.INOUT)).push(Tween.to(model, 14, 8300.0F).target(50000.0F).ease(Linear.INOUT)).push(Tween.to(model, 6, 8300.0F).target(650.0F).ease(Linear.INOUT)).push(Tween.to(model, 7, 8300.0F).target(6500.0F).ease(Linear.INOUT)).push(Tween.to(model, 8, 8300.0F).target(65000.0F).ease(Linear.INOUT)).push(Tween.to(model, 30, 8300.0F).target(2400.0F).ease(Linear.INOUT)).push(Tween.to(model, 31, 8300.0F).target(24000.0F).ease(Linear.INOUT)).push(Tween.to(model, 32, 8300.0F).target(240000.0F).ease(Linear.INOUT)).push(Tween.to(model, 24, 8300.0F).target(56400.0F).ease(Linear.INOUT)).push(Tween.to(model, 25, 8300.0F).target(564000.0F).ease(Linear.INOUT)).push(Tween.to(model, 26, 8300.0F).target(5640000.0F).ease(Linear.INOUT)).end().beginParallel().push(Tween.to(model, 0, 0.0F).target(0.0F)).push(Tween.to(model, 1, 0.0F).target(0.0F)).push(Tween.to(model, 1, 0.0F).target(0.0F)).push(Tween.to(model, 18, 0.0F).target(0.0F)).push(Tween.to(model, 19, 0.0F).target(0.0F)).push(Tween.to(model, 20, 0.0F).target(0.0F)).push(Tween.to(model, 12, 0.0F).target(0.0F)).push(Tween.to(model, 13, 0.0F).target(0.0F)).push(Tween.to(model, 14, 0.0F).target(0.0F)).push(Tween.to(model, 6, 0.0F).target(0.0F)).push(Tween.to(model, 7, 0.0F).target(0.0F)).push(Tween.to(model, 8, 0.0F).target(0.0F)).push(Tween.to(model, 30, 0.0F).target(0.0F)).push(Tween.to(model, 31, 0.0F).target(0.0F)).push(Tween.to(model, 32, 0.0F).target(0.0F)).push(Tween.to(model, 24, 0.0F).target(0.0F)).push(Tween.to(model, 25, 0.0F).target(0.0F)).push(Tween.to(model, 26, 0.0F).target(0.0F)).end().beginParallel().push(Tween.to(model, 8, 430.0F).target(0.3F)).push(Tween.to(model, 20, 430.0F).target(0.4F)).push(Tween.to(model, 14, 430.0F).target(0.4F)).end().pushPause(80.0F).beginParallel().push(Tween.to(model, 8, 430.0F).target(-0.3F)).push(Tween.to(model, 20, 430.0F).target(-0.4F)).push(Tween.to(model, 14, 430.0F).target(-0.4F)).end().beginParallel().push(Tween.to(model, 0, 900.0F).target(400.0F).ease(Linear.INOUT)).push(Tween.to(model, 1, 900.0F).target(4000.0F).ease(Linear.INOUT)).push(Tween.to(model, 1, 900.0F).target(40000.0F).ease(Linear.INOUT)).push(Tween.to(model, 18, 900.0F).target(300.0F).ease(Linear.INOUT)).push(Tween.to(model, 19, 900.0F).target(3000.0F).ease(Linear.INOUT)).push(Tween.to(model, 20, 900.0F).target(30000.0F).ease(Linear.INOUT)).push(Tween.to(model, 12, 900.0F).target(500.0F).ease(Linear.INOUT)).push(Tween.to(model, 13, 900.0F).target(5000.0F).ease(Linear.INOUT)).push(Tween.to(model, 14, 900.0F).target(50000.0F).ease(Linear.INOUT)).push(Tween.to(model, 6, 900.0F).target(650.0F).ease(Linear.INOUT)).push(Tween.to(model, 7, 900.0F).target(6500.0F).ease(Linear.INOUT)).push(Tween.to(model, 8, 900.0F).target(65000.0F).ease(Linear.INOUT)).push(Tween.to(model, 30, 900.0F).target(2400.0F).ease(Linear.INOUT)).push(Tween.to(model, 31, 900.0F).target(24000.0F).ease(Linear.INOUT)).push(Tween.to(model, 32, 900.0F).target(240000.0F).ease(Linear.INOUT)).push(Tween.to(model, 24, 900.0F).target(56400.0F).ease(Linear.INOUT)).push(Tween.to(model, 25, 900.0F).target(564000.0F).ease(Linear.INOUT)).push(Tween.to(model, 26, 900.0F).target(5640000.0F).ease(Linear.INOUT)).end().beginParallel().push(Tween.to(model, 0, 0.0F).target(0.0F)).push(Tween.to(model, 1, 0.0F).target(0.0F)).push(Tween.to(model, 1, 0.0F).target(0.0F)).push(Tween.to(model, 18, 0.0F).target(0.0F)).push(Tween.to(model, 19, 0.0F).target(0.0F)).push(Tween.to(model, 20, 0.0F).target(0.0F)).push(Tween.to(model, 12, 0.0F).target(0.0F)).push(Tween.to(model, 13, 0.0F).target(0.0F)).push(Tween.to(model, 14, 0.0F).target(0.0F)).push(Tween.to(model, 6, 0.0F).target(0.0F)).push(Tween.to(model, 7, 0.0F).target(0.0F)).push(Tween.to(model, 8, 0.0F).target(0.0F)).push(Tween.to(model, 30, 0.0F).target(0.0F)).push(Tween.to(model, 31, 0.0F).target(0.0F)).push(Tween.to(model, 32, 0.0F).target(0.0F)).push(Tween.to(model, 24, 0.0F).target(0.0F)).push(Tween.to(model, 25, 0.0F).target(0.0F)).push(Tween.to(model, 26, 0.0F).target(0.0F)).end().push(Tween.to(model, 8, 0.0F).target(0.0F)).push(Tween.to(model, 20, 0.0F).target(0.0F)).push(Tween.to(model, 14, 0.0F).target(0.0F)).beginParallel().push(Tween.to(model, 8, 430.0F).target(0.3F)).push(Tween.to(model, 20, 430.0F).target(0.4F)).push(Tween.to(model, 14, 430.0F).target(0.4F)).end().pushPause(80.0F).beginParallel().push(Tween.to(model, 8, 430.0F).target(-0.3F)).push(Tween.to(model, 20, 430.0F).target(-0.4F)).push(Tween.to(model, 14, 430.0F).target(-0.4F)).end().push(Tween.to(model, 8, 0.0F).target(0.0F)).push(Tween.to(model, 20, 0.0F).target(0.0F)).push(Tween.to(model, 14, 0.0F).target(0.0F)).push(Tween.to(model, 6, 112.0F).target(0.0F)).beginSequence().beginParallel().push(Tween.to(model, 6, 105.0F).target(-0.4F)).push(Tween.to(model, 0, 105.0F).target(0.05F)).push(Tween.to(model, 18, 105.0F).target(-0.3F)).push(Tween.to(model, 12, 105.0F).target(-0.3F)).end().beginParallel().push(Tween.to(model, 6, 105.0F).target(0.4F)).push(Tween.to(model, 0, 105.0F).target(-0.05F)).push(Tween.to(model, 18, 105.0F).target(0.3F)).push(Tween.to(model, 12, 105.0F).target(0.3F)).end().repeat(8, 0.0F)).end().pushPause(430.0F).push(Tween.to(model, 6, 0.0F).target(0.0F)).push(Tween.to(model, 0, 0.0F).target(0.0F)).push(Tween.to(model, 18, 0.0F).target(0.0F)).push(Tween.to(model, 12, 0.0F).target(0.0F)).beginParallel().push(Tween.to(model, 20, 430.0F).target(-2.0F)).push(Tween.to(model, 18, 430.0F).target(-0.5F)).push(Tween.to(model, 1, 250.0F).target(-0.3F)).end().pushPause(80.0F).beginParallel().push(Tween.to(model, 1, 250.0F).target(0.3F)).push(Tween.to(model, 20, 240.0F).target(0.0F)).push(Tween.to(model, 18, 240.0F).target(0.0F)).push(Tween.to(model, 14, 430.0F).target(2.0F)).push(Tween.to(model, 12, 430.0F).target(-0.5F)).end().beginParallel().push(Tween.to(model, 1, 120.0F).target(0.0F)).push(Tween.to(model, 0, 240.0F).target(-0.3F)).push(Tween.to(model, 20, 430.0F).target(-2.5F)).push(Tween.to(model, 18, 430.0F).target(-0.5F)).push(Tween.to(model, 14, 430.0F).target(2.5F)).push(Tween.to(model, 12, 430.0F).target(-0.5F)).end().pushPause(90.0F).repeat(1, 0.0F)).end().beginParallel().push(Tween.to(model, 0, 3800.0F).target(400.0F).ease(Linear.INOUT)).push(Tween.to(model, 1, 3800.0F).target(4000.0F).ease(Linear.INOUT)).push(Tween.to(model, 1, 3800.0F).target(40000.0F).ease(Linear.INOUT)).push(Tween.to(model, 18, 3800.0F).target(300.0F).ease(Linear.INOUT)).push(Tween.to(model, 19, 3800.0F).target(3000.0F).ease(Linear.INOUT)).push(Tween.to(model, 20, 3800.0F).target(30000.0F).ease(Linear.INOUT)).push(Tween.to(model, 12, 3800.0F).target(500.0F).ease(Linear.INOUT)).push(Tween.to(model, 13, 3800.0F).target(5000.0F).ease(Linear.INOUT)).push(Tween.to(model, 14, 3800.0F).target(50000.0F).ease(Linear.INOUT)).push(Tween.to(model, 6, 3800.0F).target(650.0F).ease(Linear.INOUT)).push(Tween.to(model, 7, 3800.0F).target(6500.0F).ease(Linear.INOUT)).push(Tween.to(model, 8, 3800.0F).target(65000.0F).ease(Linear.INOUT)).push(Tween.to(model, 30, 3800.0F).target(2400.0F).ease(Linear.INOUT)).push(Tween.to(model, 31, 3800.0F).target(24000.0F).ease(Linear.INOUT)).push(Tween.to(model, 32, 3800.0F).target(240000.0F).ease(Linear.INOUT)).push(Tween.to(model, 24, 3800.0F).target(56400.0F).ease(Linear.INOUT)).push(Tween.to(model, 25, 3800.0F).target(564000.0F).ease(Linear.INOUT)).push(Tween.to(model, 26, 3800.0F).target(5640000.0F).ease(Linear.INOUT)).end().beginParallel().push(Tween.to(model, 0, 0.0F).target(0.0F)).push(Tween.to(model, 1, 0.0F).target(0.0F)).push(Tween.to(model, 1, 0.0F).target(0.0F)).push(Tween.to(model, 18, 0.0F).target(0.0F)).push(Tween.to(model, 19, 0.0F).target(0.0F)).push(Tween.to(model, 20, 0.0F).target(0.0F)).push(Tween.to(model, 12, 0.0F).target(0.0F)).push(Tween.to(model, 13, 0.0F).target(0.0F)).push(Tween.to(model, 14, 0.0F).target(0.0F)).push(Tween.to(model, 6, 0.0F).target(0.0F)).push(Tween.to(model, 7, 0.0F).target(0.0F)).push(Tween.to(model, 8, 0.0F).target(0.0F)).push(Tween.to(model, 30, 0.0F).target(0.0F)).push(Tween.to(model, 31, 0.0F).target(0.0F)).push(Tween.to(model, 32, 0.0F).target(0.0F)).push(Tween.to(model, 24, 0.0F).target(0.0F)).push(Tween.to(model, 25, 0.0F).target(0.0F)).push(Tween.to(model, 26, 0.0F).target(0.0F)).end();
      return timeline;
   }

   public boolean usesBodyPart(int part) {
      return part == 0 || part == 12 || part == 18 || part == 6 || part == 30 || part == 24;
   }

   protected void startSound() {}

   protected boolean hasSound() {
      return false;
   }
}
